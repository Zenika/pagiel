version: "3.3"

services:

  mongo:
    image: ${MONGO_IMAGE_VERSION}
    container_name: mongo
    restart: always
    volumes:
      - ./mongo/data:/data/db
      - ./mongo/config:/data/configdb
    ports:
      - "27017:27017"
      - "27018:27018"
    networks:
      - epa-network

  mongo-express:
    image: ${MONGO_EXPRESS_IMAGE_VERSION}
    container_name: mongo-express
    depends_on: 
      - mongo   
    restart: always
    ports:
      - 8091:8081
    networks:
      - epa-network

  influxdb:
    image: ${INFLUXDB_IMAGE_VERSION}
    container_name: influxdb
    ports:
      - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB_NAME}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
    networks:
      - epa-network

  graphite:
    image: ${GRAPHITE_IMAGE_VERSION}
    container_name: graphite
    ports:
      - "2003:2003"
      - "8092:80"
    restart: always
    volumes:
      - graphite-storage:/opt/graphite/storage/whisper
      - ./graphite/conf/carbon.conf:/opt/graphite/conf/carbon.conf:ro
    networks:
      - epa-network
      
  powerapi-hwpc-sensor:
    image: ${POWER_API_HWPC_SENSOR_IMAGE_VERSION}
    container_name: hwpc-sensor
    privileged: true
    depends_on:
      - mongo
    links:
      - mongo
    volumes:
      - '/sys:/sys'
      - '/var/lib/docker/containers:/var/lib/docker/containers:ro'
      - '/tmp/powerapi-sensor-reporting-firefox:/reporting'
    command: /usr/bin/hwpc-sensor -n "hwpc-sensor" -r "mongodb" -U $MONGO_URI -D $DB -C $INPUT_COLLECTION -s "rapl" -o -e "RAPL_ENERGY_PKG" -s "msr" -e "TSC" -e "APERF" -e "MPERF" -c "core" -e "CPU_CLK_THREAD_UNHALTED:REF_P" -e "CPU_CLK_THREAD_UNHALTED:THREAD_P" -e "LLC_MISSES" -e "INSTRUCTIONS_RETIRED"
    networks:
      - epa-network
    
  formula:
    image: ${POWER_API_FORMULA_IMAGE_VERSION}
    container_name: formula
    depends_on:
      - mongo
    command: -s --input mongodb --model HWPCReport -u $MONGO_URI -d $DB -c $INPUT_COLLECTION --output mongodb --name power --model PowerReport -u $MONGO_URI -d $DB -c $OUTPUT_COLLECTION --output mongodb --name formula --model FormulaReport -u $MONGO_URI -d $DB -c frep --output influxdb --name influx --uri $INFLUXDB_HOST --port $INFLUXDB_PORT --db $INFLUXDB_DB_NAME --formula smartwatts --cpu-ratio-base $BASE_CPU_RATIO --cpu-ratio-min $MIN_CPU_RATIO --cpu-ratio-max $MAX_CPU_RATIO --cpu-error-threshold 2.0 --dram-error-threshold 2.0 --disable-dram-formula
    networks:
      - epa-network
  
  front-vue:
    build: ./front-vuejs
    container_name: front-vue
    ports:
      - 8090:8080
    depends_on:
      - api-node
    environment:
      - VUE_APP_API_URL="http://api-node:3031"
    networks:
      - epa-network

  api-node:
    build: ./api-nodejs
    container_name: api-node
    ports: 
      - 3040:3031
    networks:
      - epa-network

  selenium-hub:
    image: ${SELENIUM_HUB_IMAGE_VERSION}
    container_name: selenium-hub
    expose:
      - 4444    
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
    networks:
      - epa-network

  chrome:
    image: ${SELENIUM_NODE_CHROME_IMAGE_VERSION}
    container_name: selenium-node-chrome
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    ports:
      - "6900:5900"
    networks:
      - epa-network

  robot-chrome-test:
    build: robot
    command: -v BROWSER:gc --outputdir /out /tests
    container_name: robot-chrome-test
    volumes:
      - ./robot/tests:/tests:ro
      - ./robot-results/gc:/out:rw
    depends_on:
      - selenium-hub
      - front-vue
      - chrome
      # network_mode: host
    networks:
      - epa-network

  sitespeed:
    container_name: sitespeed
    image: ${SITESPEED_IMAGE_VERSION}
    shm_size: '1g'
    command: https://www.arkea.com/ --cpu --sustainable.enable --axe.enable -b chrome --graphite.host graphite --graphite.webHost http://graphite --graphite.port ${GRAPHITE_PORT} --graphite.httpPort 8092 --graphite.auth user:password --graphite.username ${GRAPHITE_USERNAME} --graphite.password ${GRAPHITE_PASSWORD}
    volumes:
      - ./sitespeed-result:/sitespeed.io/sitespeed-result:rw
    networks:
      - epa-network

  grafana:
    container_name: grafana
    image: ${GRAFANA_IMAGE_VERSION}
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      - epa-network

  grafana-setup:
    container_name: grafana_setup
    image: ${GRAFANA_SETUP_IMAGE_VERSION}
    links:
      - grafana
    environment:
      - GF_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USER=${GRAFANA_USERNAME}
    networks:
      - epa-network

volumes:
  influxdb-storage:
  graphite-storage:
  chronograf-storage:
  grafana-storage:

networks:
  epa-network: